package textExcel;

public class FormulaCell extends RealCell implements Cell {
	
private String [] equation;
	public FormulaCell (String input) {
		super(input);
		
	}
	public String[] getFormula(){
		String formula = this.fullCellText().substring(1, this.fullCellText().length()-1);
		equation = formula.split(" ");
		return equation;
	}
	public String abbreviatedCellText(){
		String answer = Double.toString(calculate(equation[0], equation[1], equation[2]));
/*if (answer.length() > 10){
	return answer.substring(0, 10);
} else {
	while (answer.length() != 10){
		int diff = 10 - answer.length();
		for(int i = 0; i < diff; i++)
		answer += " ";
	}
}*/
return answer;
}
	public String fullCellText() {
		return super.fullCellText();
	}
	
	public double calculate (String firstNum, String operator, String secondNum) {
		int position = 0;
		int num = equation.length;
		double answer = 0.0;
		if (position == equation.length){
			return answer;
		}else {
			if (operator.equals("+")){
				answer = getDoubleValue(firstNum) + getDoubleValue(secondNum);//add
			}else if (operator.equals("-")){
				answer = getDoubleValue(firstNum) - getDoubleValue(secondNum);//subtract
			}else if (operator.equals("*")){
				answer = getDoubleValue(firstNum) * getDoubleValue(secondNum);//multiply
			}else if (operator.equals("/")){
				answer = getDoubleValue(firstNum) / getDoubleValue(secondNum);//divide
			}
			//calculate (equation[1]); //recursion 
			return answer;
		}
	}
	
	public double getDoubleValue (String number) {
		return Double.parseDouble(number);
	}
	
	public String getType(){
		return "FormulaCell";
	}
}